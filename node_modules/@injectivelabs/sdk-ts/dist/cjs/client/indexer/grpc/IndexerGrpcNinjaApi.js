"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexerGrpcNinjaApi = void 0;
const goadesign_goagen_ninja_api_pb_1 = require("@injectivelabs/ninja-api/goadesign_goagen_ninja_api_pb");
const goadesign_goagen_ninja_api_pb_service_1 = require("@injectivelabs/ninja-api/goadesign_goagen_ninja_api_pb_service");
const BaseGrpcConsumer_1 = __importDefault(require("../../BaseGrpcConsumer"));
const transformers_1 = require("../transformers");
const types_1 = require("../types");
const exceptions_1 = require("@injectivelabs/exceptions");
const indexer_proto_ts_1 = require("@injectivelabs/indexer-proto-ts");
/**
 * @category Indexer Grpc API
 */
class IndexerGrpcNinjaApi extends BaseGrpcConsumer_1.default {
    constructor() {
        super(...arguments);
        this.module = types_1.IndexerModule.Ninja;
    }
    fetchVault({ contractAddress, slug, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.GetVaultRequest();
            if (contractAddress) {
                request.setContractAddress(contractAddress);
            }
            if (slug) {
                request.setSlug(slug);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.GetVault);
                return response
                    .getVaultList()
                    .map(transformers_1.IndexerGrpcNinjaTransformer.grpcVaultToVault);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchVaults({ pageSize, pageIndex, codeId, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.GetVaultsRequest();
            if (pageSize) {
                request.setPageSize(pageSize);
            }
            if (pageIndex) {
                request.setPageIndex(pageIndex);
            }
            if (codeId) {
                request.setCodeId(codeId);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.GetVaults);
                const vaultsList = response.getVaultsList();
                const pagination = response.getPagination();
                return {
                    vaults: vaultsList.map(transformers_1.IndexerGrpcNinjaTransformer.grpcVaultToVault),
                    pagination: transformers_1.IndexerGrpcNinjaTransformer.grpcPaginationToPagination(pagination),
                };
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchLpTokenPriceChart({ vaultAddress, from, to, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.LPTokenPriceChartRequest();
            request.setVaultAddress(vaultAddress);
            if (from) {
                request.setFromTime(from);
            }
            if (to) {
                request.setToTime(to);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.LPTokenPriceChart);
                return response
                    .getPricesList()
                    .map(transformers_1.IndexerGrpcNinjaTransformer.grpcPriceSnapShotToPriceSnapShot);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchTVLChartRequest({ vaultAddress, from, to, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.TVLChartRequest();
            request.setVaultAddress(vaultAddress);
            if (from) {
                request.setFromTime(from);
            }
            if (to) {
                request.setToTime(to);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.TVLChart);
                return response
                    .getPricesList()
                    .map(transformers_1.IndexerGrpcNinjaTransformer.grpcPriceSnapShotToPriceSnapShot);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchVaultsByHolderAddress({ pageSize, pageIndex, holderAddress, vaultAddress, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.VaultsByHolderAddressRequest();
            request.setHolderAddress(holderAddress);
            if (vaultAddress) {
                request.setVaultAddress(vaultAddress);
            }
            if (pageSize) {
                request.setPageSize(pageSize);
            }
            if (pageIndex) {
                request.setPageIndex(pageIndex);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.VaultsByHolderAddress);
                return response
                    .getSubscriptionsList()
                    .map(transformers_1.IndexerGrpcNinjaTransformer.grpcSubscriptionToSubscription);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchLPHolders({ pageSize, pageIndex, vaultAddress, }) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.LPHoldersRequest();
            request.setVaultAddress(vaultAddress);
            if (pageSize) {
                request.setPageSize(pageSize);
            }
            if (pageIndex) {
                request.setPageIndex(pageIndex);
            }
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.LPHolders);
                return response
                    .getHoldersList()
                    .map(transformers_1.IndexerGrpcNinjaTransformer.grpcHoldersToHolders);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchHolderPortfolio(holderAddress) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.PortfolioRequest();
            request.setHolderAddress(holderAddress);
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.Portfolio);
                return transformers_1.IndexerGrpcNinjaTransformer.grpcPortfolioToPortfolio(response);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
    fetchLeaderboard() {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new goadesign_goagen_ninja_api_pb_1.LeaderboardRequest();
            try {
                const response = yield this.request(request, goadesign_goagen_ninja_api_pb_service_1.NinjaAPI.Leaderboard);
                return transformers_1.IndexerGrpcNinjaTransformer.grpcLeaderboardToLeaderboard(response);
            }
            catch (e) {
                if (e instanceof indexer_proto_ts_1.InjectiveMetaRpc.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e, {
                    code: exceptions_1.UnspecifiedErrorCode,
                    contextModule: this.module,
                });
            }
        });
    }
}
exports.IndexerGrpcNinjaApi = IndexerGrpcNinjaApi;
//# sourceMappingURL=IndexerGrpcNinjaApi.js.map