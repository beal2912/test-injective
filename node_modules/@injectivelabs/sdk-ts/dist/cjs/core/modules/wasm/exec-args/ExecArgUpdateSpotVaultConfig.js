"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ExecArgBase_1 = require("../ExecArgBase");
/**
 * @category Contract Exec Arguments
 */
class ExecArgUpdateSpotVaultConfig extends ExecArgBase_1.ExecArgBase {
    static fromJSON(params) {
        return new ExecArgUpdateSpotVaultConfig(params);
    }
    toData() {
        const { params } = this;
        return Object.assign(Object.assign({ market_id: params.marketId, order_density: params.orderDensity, reservation_price_sensitivity_ratio: params.reservationPriceSensitivityRatio, reservation_spread_sensitivity_ratio: params.reservationSpreadSensitivityRatio, max_active_capital_utilization_ratio: params.maxActiveCapitalUtilizationRatio, head_change_tolerance_ratio: params.headChangeToleranceRatio, fair_price_tail_deviation_ratio: params.fairPriceTailDeviationRatio, min_head_to_tail_deviation_ratio: params.minHeadToTailDeviationRatio, signed_min_head_to_fair_price_deviation_ratio: params.signedMinHeadToFairPriceDeviationRatio, signed_min_head_to_tob_deviation_ratio: params.signedMinHeadToTobDeviationRatio, target_base_weight: params.targetBaseWeight }, (params.oracleType ? { oracle_type: params.oracleType } : {})), { trade_volatility_group_sec: params.tradeVolatilityGroupSec, min_trade_volatility_sample_size: params.minTradeVolatilitySampleSize, default_mid_price_volatility_ratio: params.defaultMidPriceVolatilityRatio, allowed_subscription_types: params.allowedSubscriptionTypes, allowed_redemption_types: params.allowedRedemptionTypes, imbalance_adjustment_exponent: params.imbalanceAdjustmentExponent, reward_diminishing_factor: params.rewardDiminishingFactor, base_decimals: params.baseDecimals, quote_decimals: params.quoteDecimals });
    }
    toExecData() {
        return (0, ExecArgBase_1.dataToExecData)('update_vault_config', this.toData());
    }
}
exports.default = ExecArgUpdateSpotVaultConfig;
//# sourceMappingURL=ExecArgUpdateSpotVaultConfig.js.map