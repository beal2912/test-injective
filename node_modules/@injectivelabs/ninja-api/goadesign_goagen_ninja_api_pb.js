// source: goadesign_goagen_ninja_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.ninja_api.DenomBalance', null, global);
goog.exportSymbol('proto.ninja_api.GetVaultRequest', null, global);
goog.exportSymbol('proto.ninja_api.GetVaultResponse', null, global);
goog.exportSymbol('proto.ninja_api.GetVaultsRequest', null, global);
goog.exportSymbol('proto.ninja_api.GetVaultsResponse', null, global);
goog.exportSymbol('proto.ninja_api.Holders', null, global);
goog.exportSymbol('proto.ninja_api.LPHoldersRequest', null, global);
goog.exportSymbol('proto.ninja_api.LPHoldersResponse', null, global);
goog.exportSymbol('proto.ninja_api.LPTokenPriceChartRequest', null, global);
goog.exportSymbol('proto.ninja_api.LPTokenPriceChartResponse', null, global);
goog.exportSymbol('proto.ninja_api.LeaderboardEntry', null, global);
goog.exportSymbol('proto.ninja_api.LeaderboardRequest', null, global);
goog.exportSymbol('proto.ninja_api.LeaderboardResponse', null, global);
goog.exportSymbol('proto.ninja_api.Pagination', null, global);
goog.exportSymbol('proto.ninja_api.PortfolioRequest', null, global);
goog.exportSymbol('proto.ninja_api.PortfolioResponse', null, global);
goog.exportSymbol('proto.ninja_api.PriceSnapshot', null, global);
goog.exportSymbol('proto.ninja_api.Profits', null, global);
goog.exportSymbol('proto.ninja_api.SubaccountBalance', null, global);
goog.exportSymbol('proto.ninja_api.Subscription', null, global);
goog.exportSymbol('proto.ninja_api.TVLChartRequest', null, global);
goog.exportSymbol('proto.ninja_api.TVLChartResponse', null, global);
goog.exportSymbol('proto.ninja_api.Vault', null, global);
goog.exportSymbol('proto.ninja_api.VaultsByHolderAddressRequest', null, global);
goog.exportSymbol('proto.ninja_api.VaultsByHolderAddressResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.GetVaultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.GetVaultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.GetVaultsRequest.displayName = 'proto.ninja_api.GetVaultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.GetVaultsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.GetVaultsResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.GetVaultsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.GetVaultsResponse.displayName = 'proto.ninja_api.GetVaultsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.Vault = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.Vault, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.Vault.displayName = 'proto.ninja_api.Vault';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.Profits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.Profits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.Profits.displayName = 'proto.ninja_api.Profits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.SubaccountBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.SubaccountBalance.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.SubaccountBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.SubaccountBalance.displayName = 'proto.ninja_api.SubaccountBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.DenomBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.DenomBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.DenomBalance.displayName = 'proto.ninja_api.DenomBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.Pagination.displayName = 'proto.ninja_api.Pagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.GetVaultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.GetVaultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.GetVaultRequest.displayName = 'proto.ninja_api.GetVaultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.GetVaultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.GetVaultResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.GetVaultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.GetVaultResponse.displayName = 'proto.ninja_api.GetVaultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LPTokenPriceChartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.LPTokenPriceChartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LPTokenPriceChartRequest.displayName = 'proto.ninja_api.LPTokenPriceChartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LPTokenPriceChartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.LPTokenPriceChartResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.LPTokenPriceChartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LPTokenPriceChartResponse.displayName = 'proto.ninja_api.LPTokenPriceChartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.PriceSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.PriceSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.PriceSnapshot.displayName = 'proto.ninja_api.PriceSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.TVLChartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.TVLChartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.TVLChartRequest.displayName = 'proto.ninja_api.TVLChartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.TVLChartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.TVLChartResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.TVLChartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.TVLChartResponse.displayName = 'proto.ninja_api.TVLChartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.VaultsByHolderAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.VaultsByHolderAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.VaultsByHolderAddressRequest.displayName = 'proto.ninja_api.VaultsByHolderAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.VaultsByHolderAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.VaultsByHolderAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.VaultsByHolderAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.VaultsByHolderAddressResponse.displayName = 'proto.ninja_api.VaultsByHolderAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.Subscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.Subscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.Subscription.displayName = 'proto.ninja_api.Subscription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LPHoldersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.LPHoldersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LPHoldersRequest.displayName = 'proto.ninja_api.LPHoldersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LPHoldersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.LPHoldersResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.LPHoldersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LPHoldersResponse.displayName = 'proto.ninja_api.LPHoldersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.Holders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.Holders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.Holders.displayName = 'proto.ninja_api.Holders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.PortfolioRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.PortfolioRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.PortfolioRequest.displayName = 'proto.ninja_api.PortfolioRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.PortfolioResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.PortfolioResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.PortfolioResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.PortfolioResponse.displayName = 'proto.ninja_api.PortfolioResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LeaderboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.LeaderboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LeaderboardRequest.displayName = 'proto.ninja_api.LeaderboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LeaderboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ninja_api.LeaderboardResponse.repeatedFields_, null);
};
goog.inherits(proto.ninja_api.LeaderboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LeaderboardResponse.displayName = 'proto.ninja_api.LeaderboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ninja_api.LeaderboardEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ninja_api.LeaderboardEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ninja_api.LeaderboardEntry.displayName = 'proto.ninja_api.LeaderboardEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.GetVaultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.GetVaultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.GetVaultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    codeId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.GetVaultsRequest}
 */
proto.ninja_api.GetVaultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.GetVaultsRequest;
  return proto.ninja_api.GetVaultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.GetVaultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.GetVaultsRequest}
 */
proto.ninja_api.GetVaultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.GetVaultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.GetVaultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.GetVaultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint32 page_size = 1;
 * @return {number}
 */
proto.ninja_api.GetVaultsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultsRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 page_index = 2;
 * @return {number}
 */
proto.ninja_api.GetVaultsRequest.prototype.getPageIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.setPageIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.clearPageIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultsRequest.prototype.hasPageIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 code_id = 3;
 * @return {number}
 */
proto.ninja_api.GetVaultsRequest.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.setCodeId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.GetVaultsRequest} returns this
 */
proto.ninja_api.GetVaultsRequest.prototype.clearCodeId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultsRequest.prototype.hasCodeId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.GetVaultsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.GetVaultsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.GetVaultsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.GetVaultsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultsList: jspb.Message.toObjectList(msg.getVaultsList(),
    proto.ninja_api.Vault.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.ninja_api.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.GetVaultsResponse}
 */
proto.ninja_api.GetVaultsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.GetVaultsResponse;
  return proto.ninja_api.GetVaultsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.GetVaultsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.GetVaultsResponse}
 */
proto.ninja_api.GetVaultsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.Vault;
      reader.readMessage(value,proto.ninja_api.Vault.deserializeBinaryFromReader);
      msg.addVaults(value);
      break;
    case 2:
      var value = new proto.ninja_api.Pagination;
      reader.readMessage(value,proto.ninja_api.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.GetVaultsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.GetVaultsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.GetVaultsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.Vault.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ninja_api.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vault vaults = 1;
 * @return {!Array<!proto.ninja_api.Vault>}
 */
proto.ninja_api.GetVaultsResponse.prototype.getVaultsList = function() {
  return /** @type{!Array<!proto.ninja_api.Vault>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.Vault, 1));
};


/**
 * @param {!Array<!proto.ninja_api.Vault>} value
 * @return {!proto.ninja_api.GetVaultsResponse} returns this
*/
proto.ninja_api.GetVaultsResponse.prototype.setVaultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.Vault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.Vault}
 */
proto.ninja_api.GetVaultsResponse.prototype.addVaults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.Vault, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.GetVaultsResponse} returns this
 */
proto.ninja_api.GetVaultsResponse.prototype.clearVaultsList = function() {
  return this.setVaultsList([]);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.ninja_api.Pagination}
 */
proto.ninja_api.GetVaultsResponse.prototype.getPagination = function() {
  return /** @type{?proto.ninja_api.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.ninja_api.Pagination, 2));
};


/**
 * @param {?proto.ninja_api.Pagination|undefined} value
 * @return {!proto.ninja_api.GetVaultsResponse} returns this
*/
proto.ninja_api.GetVaultsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ninja_api.GetVaultsResponse} returns this
 */
proto.ninja_api.GetVaultsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.Vault.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.Vault.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.Vault} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Vault.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    codeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    vaultName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currentTvl: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    profits: (f = msg.getProfits()) && proto.ninja_api.Profits.toObject(includeInstance, f),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    vaultType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lpTokenPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    subaccountInfo: (f = msg.getSubaccountInfo()) && proto.ninja_api.SubaccountBalance.toObject(includeInstance, f),
    masterContractAddress: jspb.Message.getFieldWithDefault(msg, 11, ""),
    totalLpAmount: jspb.Message.getFieldWithDefault(msg, 12, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 13, ""),
    redemptionLockTimeDuration: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.Vault}
 */
proto.ninja_api.Vault.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.Vault;
  return proto.ninja_api.Vault.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.Vault} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.Vault}
 */
proto.ninja_api.Vault.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentTvl(value);
      break;
    case 6:
      var value = new proto.ninja_api.Profits;
      reader.readMessage(value,proto.ninja_api.Profits.deserializeBinaryFromReader);
      msg.setProfits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLpTokenPrice(value);
      break;
    case 10:
      var value = new proto.ninja_api.SubaccountBalance;
      reader.readMessage(value,proto.ninja_api.SubaccountBalance.deserializeBinaryFromReader);
      msg.setSubaccountInfo(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterContractAddress(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalLpAmount(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRedemptionLockTimeDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.Vault.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.Vault.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.Vault} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Vault.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getVaultName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrentTvl();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getProfits();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ninja_api.Profits.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getVaultType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLpTokenPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getSubaccountInfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ninja_api.SubaccountBalance.serializeBinaryToWriter
    );
  }
  f = message.getMasterContractAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTotalLpAmount();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRedemptionLockTimeDuration();
  if (f !== 0) {
    writer.writeSint64(
      14,
      f
    );
  }
};


/**
 * optional string contract_address = 1;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 code_id = 2;
 * @return {number}
 */
proto.ninja_api.Vault.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string vault_name = 3;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getVaultName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setVaultName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string market_id = 4;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double current_tvl = 5;
 * @return {number}
 */
proto.ninja_api.Vault.prototype.getCurrentTvl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setCurrentTvl = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional Profits profits = 6;
 * @return {?proto.ninja_api.Profits}
 */
proto.ninja_api.Vault.prototype.getProfits = function() {
  return /** @type{?proto.ninja_api.Profits} */ (
    jspb.Message.getWrapperField(this, proto.ninja_api.Profits, 6));
};


/**
 * @param {?proto.ninja_api.Profits|undefined} value
 * @return {!proto.ninja_api.Vault} returns this
*/
proto.ninja_api.Vault.prototype.setProfits = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.clearProfits = function() {
  return this.setProfits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.Vault.prototype.hasProfits = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 updated_at = 7;
 * @return {number}
 */
proto.ninja_api.Vault.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string vault_type = 8;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getVaultType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setVaultType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double lp_token_price = 9;
 * @return {number}
 */
proto.ninja_api.Vault.prototype.getLpTokenPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setLpTokenPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional SubaccountBalance subaccount_info = 10;
 * @return {?proto.ninja_api.SubaccountBalance}
 */
proto.ninja_api.Vault.prototype.getSubaccountInfo = function() {
  return /** @type{?proto.ninja_api.SubaccountBalance} */ (
    jspb.Message.getWrapperField(this, proto.ninja_api.SubaccountBalance, 10));
};


/**
 * @param {?proto.ninja_api.SubaccountBalance|undefined} value
 * @return {!proto.ninja_api.Vault} returns this
*/
proto.ninja_api.Vault.prototype.setSubaccountInfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.clearSubaccountInfo = function() {
  return this.setSubaccountInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.Vault.prototype.hasSubaccountInfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string master_contract_address = 11;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getMasterContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setMasterContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string total_lp_amount = 12;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getTotalLpAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setTotalLpAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string slug = 13;
 * @return {string}
 */
proto.ninja_api.Vault.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional sint64 redemption_lock_time_duration = 14;
 * @return {number}
 */
proto.ninja_api.Vault.prototype.getRedemptionLockTimeDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Vault} returns this
 */
proto.ninja_api.Vault.prototype.setRedemptionLockTimeDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.Profits.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.Profits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.Profits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Profits.toObject = function(includeInstance, msg) {
  var f, obj = {
    allTimeChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    threeMonthsChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    oneMonthChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    oneDayChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    oneWeekChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    oneYearChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    threeYearsChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    sixMonthsChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.Profits}
 */
proto.ninja_api.Profits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.Profits;
  return proto.ninja_api.Profits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.Profits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.Profits}
 */
proto.ninja_api.Profits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAllTimeChange(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThreeMonthsChange(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneMonthChange(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneDayChange(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneWeekChange(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneYearChange(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThreeYearsChange(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSixMonthsChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.Profits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.Profits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.Profits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Profits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllTimeChange();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getThreeMonthsChange();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getOneMonthChange();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getOneDayChange();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getOneWeekChange();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getOneYearChange();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getThreeYearsChange();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSixMonthsChange();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional double all_time_change = 1;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getAllTimeChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setAllTimeChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double three_months_change = 2;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getThreeMonthsChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setThreeMonthsChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double one_month_change = 3;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getOneMonthChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setOneMonthChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double one_day_change = 4;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getOneDayChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setOneDayChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double one_week_change = 5;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getOneWeekChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setOneWeekChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double one_year_change = 6;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getOneYearChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setOneYearChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double three_years_change = 7;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getThreeYearsChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setThreeYearsChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double six_months_change = 8;
 * @return {number}
 */
proto.ninja_api.Profits.prototype.getSixMonthsChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Profits} returns this
 */
proto.ninja_api.Profits.prototype.setSixMonthsChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.SubaccountBalance.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.SubaccountBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.SubaccountBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.SubaccountBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.SubaccountBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    subaccountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    balancesList: jspb.Message.toObjectList(msg.getBalancesList(),
    proto.ninja_api.DenomBalance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.SubaccountBalance}
 */
proto.ninja_api.SubaccountBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.SubaccountBalance;
  return proto.ninja_api.SubaccountBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.SubaccountBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.SubaccountBalance}
 */
proto.ninja_api.SubaccountBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 2:
      var value = new proto.ninja_api.DenomBalance;
      reader.readMessage(value,proto.ninja_api.DenomBalance.deserializeBinaryFromReader);
      msg.addBalances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.SubaccountBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.SubaccountBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.SubaccountBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.SubaccountBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBalancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ninja_api.DenomBalance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subaccount_id = 1;
 * @return {string}
 */
proto.ninja_api.SubaccountBalance.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.SubaccountBalance} returns this
 */
proto.ninja_api.SubaccountBalance.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated DenomBalance balances = 2;
 * @return {!Array<!proto.ninja_api.DenomBalance>}
 */
proto.ninja_api.SubaccountBalance.prototype.getBalancesList = function() {
  return /** @type{!Array<!proto.ninja_api.DenomBalance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.DenomBalance, 2));
};


/**
 * @param {!Array<!proto.ninja_api.DenomBalance>} value
 * @return {!proto.ninja_api.SubaccountBalance} returns this
*/
proto.ninja_api.SubaccountBalance.prototype.setBalancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ninja_api.DenomBalance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.DenomBalance}
 */
proto.ninja_api.SubaccountBalance.prototype.addBalances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ninja_api.DenomBalance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.SubaccountBalance} returns this
 */
proto.ninja_api.SubaccountBalance.prototype.clearBalancesList = function() {
  return this.setBalancesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.DenomBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.DenomBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.DenomBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.DenomBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalBalance: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.DenomBalance}
 */
proto.ninja_api.DenomBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.DenomBalance;
  return proto.ninja_api.DenomBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.DenomBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.DenomBalance}
 */
proto.ninja_api.DenomBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.DenomBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.DenomBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.DenomBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.DenomBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalBalance();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.ninja_api.DenomBalance.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.DenomBalance} returns this
 */
proto.ninja_api.DenomBalance.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string total_balance = 2;
 * @return {string}
 */
proto.ninja_api.DenomBalance.prototype.getTotalBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.DenomBalance} returns this
 */
proto.ninja_api.DenomBalance.prototype.setTotalBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.Pagination}
 */
proto.ninja_api.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.Pagination;
  return proto.ninja_api.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.Pagination}
 */
proto.ninja_api.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 total = 1;
 * @return {number}
 */
proto.ninja_api.Pagination.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Pagination} returns this
 */
proto.ninja_api.Pagination.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.GetVaultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.GetVaultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.GetVaultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.GetVaultRequest}
 */
proto.ninja_api.GetVaultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.GetVaultRequest;
  return proto.ninja_api.GetVaultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.GetVaultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.GetVaultRequest}
 */
proto.ninja_api.GetVaultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.GetVaultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.GetVaultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.GetVaultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contract_address = 1;
 * @return {string}
 */
proto.ninja_api.GetVaultRequest.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.GetVaultRequest} returns this
 */
proto.ninja_api.GetVaultRequest.prototype.setContractAddress = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.GetVaultRequest} returns this
 */
proto.ninja_api.GetVaultRequest.prototype.clearContractAddress = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultRequest.prototype.hasContractAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.ninja_api.GetVaultRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.GetVaultRequest} returns this
 */
proto.ninja_api.GetVaultRequest.prototype.setSlug = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.GetVaultRequest} returns this
 */
proto.ninja_api.GetVaultRequest.prototype.clearSlug = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.GetVaultRequest.prototype.hasSlug = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.GetVaultResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.GetVaultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.GetVaultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.GetVaultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultList: jspb.Message.toObjectList(msg.getVaultList(),
    proto.ninja_api.Vault.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.GetVaultResponse}
 */
proto.ninja_api.GetVaultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.GetVaultResponse;
  return proto.ninja_api.GetVaultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.GetVaultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.GetVaultResponse}
 */
proto.ninja_api.GetVaultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.Vault;
      reader.readMessage(value,proto.ninja_api.Vault.deserializeBinaryFromReader);
      msg.addVault(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.GetVaultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.GetVaultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.GetVaultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.GetVaultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.Vault.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vault vault = 1;
 * @return {!Array<!proto.ninja_api.Vault>}
 */
proto.ninja_api.GetVaultResponse.prototype.getVaultList = function() {
  return /** @type{!Array<!proto.ninja_api.Vault>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.Vault, 1));
};


/**
 * @param {!Array<!proto.ninja_api.Vault>} value
 * @return {!proto.ninja_api.GetVaultResponse} returns this
*/
proto.ninja_api.GetVaultResponse.prototype.setVaultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.Vault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.Vault}
 */
proto.ninja_api.GetVaultResponse.prototype.addVault = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.Vault, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.GetVaultResponse} returns this
 */
proto.ninja_api.GetVaultResponse.prototype.clearVaultList = function() {
  return this.setVaultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LPTokenPriceChartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LPTokenPriceChartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPTokenPriceChartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LPTokenPriceChartRequest}
 */
proto.ninja_api.LPTokenPriceChartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LPTokenPriceChartRequest;
  return proto.ninja_api.LPTokenPriceChartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LPTokenPriceChartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LPTokenPriceChartRequest}
 */
proto.ninja_api.LPTokenPriceChartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LPTokenPriceChartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LPTokenPriceChartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPTokenPriceChartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string vault_address = 1;
 * @return {string}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.getVaultAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.LPTokenPriceChartRequest} returns this
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.setVaultAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 from_time = 2;
 * @return {number}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.getFromTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LPTokenPriceChartRequest} returns this
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.setFromTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.LPTokenPriceChartRequest} returns this
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.clearFromTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.hasFromTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 to_time = 3;
 * @return {number}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.getToTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LPTokenPriceChartRequest} returns this
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.setToTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.LPTokenPriceChartRequest} returns this
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.clearToTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.LPTokenPriceChartRequest.prototype.hasToTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.LPTokenPriceChartResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LPTokenPriceChartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LPTokenPriceChartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LPTokenPriceChartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPTokenPriceChartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pricesList: jspb.Message.toObjectList(msg.getPricesList(),
    proto.ninja_api.PriceSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LPTokenPriceChartResponse}
 */
proto.ninja_api.LPTokenPriceChartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LPTokenPriceChartResponse;
  return proto.ninja_api.LPTokenPriceChartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LPTokenPriceChartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LPTokenPriceChartResponse}
 */
proto.ninja_api.LPTokenPriceChartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.PriceSnapshot;
      reader.readMessage(value,proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader);
      msg.addPrices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LPTokenPriceChartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LPTokenPriceChartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LPTokenPriceChartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPTokenPriceChartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.PriceSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PriceSnapshot prices = 1;
 * @return {!Array<!proto.ninja_api.PriceSnapshot>}
 */
proto.ninja_api.LPTokenPriceChartResponse.prototype.getPricesList = function() {
  return /** @type{!Array<!proto.ninja_api.PriceSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.PriceSnapshot, 1));
};


/**
 * @param {!Array<!proto.ninja_api.PriceSnapshot>} value
 * @return {!proto.ninja_api.LPTokenPriceChartResponse} returns this
*/
proto.ninja_api.LPTokenPriceChartResponse.prototype.setPricesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.PriceSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.LPTokenPriceChartResponse.prototype.addPrices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.PriceSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.LPTokenPriceChartResponse} returns this
 */
proto.ninja_api.LPTokenPriceChartResponse.prototype.clearPricesList = function() {
  return this.setPricesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.PriceSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.PriceSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.PriceSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PriceSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.PriceSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.PriceSnapshot;
  return proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.PriceSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.PriceSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.PriceSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.PriceSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PriceSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.ninja_api.PriceSnapshot.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.PriceSnapshot} returns this
 */
proto.ninja_api.PriceSnapshot.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional uint64 updated_at = 2;
 * @return {number}
 */
proto.ninja_api.PriceSnapshot.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.PriceSnapshot} returns this
 */
proto.ninja_api.PriceSnapshot.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.TVLChartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.TVLChartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.TVLChartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.TVLChartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.TVLChartRequest}
 */
proto.ninja_api.TVLChartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.TVLChartRequest;
  return proto.ninja_api.TVLChartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.TVLChartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.TVLChartRequest}
 */
proto.ninja_api.TVLChartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.TVLChartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.TVLChartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.TVLChartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.TVLChartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string vault_address = 1;
 * @return {string}
 */
proto.ninja_api.TVLChartRequest.prototype.getVaultAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.TVLChartRequest} returns this
 */
proto.ninja_api.TVLChartRequest.prototype.setVaultAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 from_time = 2;
 * @return {number}
 */
proto.ninja_api.TVLChartRequest.prototype.getFromTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.TVLChartRequest} returns this
 */
proto.ninja_api.TVLChartRequest.prototype.setFromTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.TVLChartRequest} returns this
 */
proto.ninja_api.TVLChartRequest.prototype.clearFromTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.TVLChartRequest.prototype.hasFromTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 to_time = 3;
 * @return {number}
 */
proto.ninja_api.TVLChartRequest.prototype.getToTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.TVLChartRequest} returns this
 */
proto.ninja_api.TVLChartRequest.prototype.setToTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.TVLChartRequest} returns this
 */
proto.ninja_api.TVLChartRequest.prototype.clearToTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.TVLChartRequest.prototype.hasToTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.TVLChartResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.TVLChartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.TVLChartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.TVLChartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.TVLChartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pricesList: jspb.Message.toObjectList(msg.getPricesList(),
    proto.ninja_api.PriceSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.TVLChartResponse}
 */
proto.ninja_api.TVLChartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.TVLChartResponse;
  return proto.ninja_api.TVLChartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.TVLChartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.TVLChartResponse}
 */
proto.ninja_api.TVLChartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.PriceSnapshot;
      reader.readMessage(value,proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader);
      msg.addPrices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.TVLChartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.TVLChartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.TVLChartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.TVLChartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.PriceSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PriceSnapshot prices = 1;
 * @return {!Array<!proto.ninja_api.PriceSnapshot>}
 */
proto.ninja_api.TVLChartResponse.prototype.getPricesList = function() {
  return /** @type{!Array<!proto.ninja_api.PriceSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.PriceSnapshot, 1));
};


/**
 * @param {!Array<!proto.ninja_api.PriceSnapshot>} value
 * @return {!proto.ninja_api.TVLChartResponse} returns this
*/
proto.ninja_api.TVLChartResponse.prototype.setPricesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.PriceSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.TVLChartResponse.prototype.addPrices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.PriceSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.TVLChartResponse} returns this
 */
proto.ninja_api.TVLChartResponse.prototype.clearPricesList = function() {
  return this.setPricesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.VaultsByHolderAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.VaultsByHolderAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.VaultsByHolderAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    holderAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vaultAddress: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest}
 */
proto.ninja_api.VaultsByHolderAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.VaultsByHolderAddressRequest;
  return proto.ninja_api.VaultsByHolderAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.VaultsByHolderAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest}
 */
proto.ninja_api.VaultsByHolderAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.VaultsByHolderAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.VaultsByHolderAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.VaultsByHolderAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 page_size = 1;
 * @return {number}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 page_index = 2;
 * @return {number}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.getPageIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.setPageIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.clearPageIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.hasPageIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string holder_address = 3;
 * @return {string}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string vault_address = 4;
 * @return {string}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.getVaultAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.setVaultAddress = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.VaultsByHolderAddressRequest} returns this
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.clearVaultAddress = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.VaultsByHolderAddressRequest.prototype.hasVaultAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.VaultsByHolderAddressResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.VaultsByHolderAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.VaultsByHolderAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.VaultsByHolderAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.VaultsByHolderAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionsList: jspb.Message.toObjectList(msg.getSubscriptionsList(),
    proto.ninja_api.Subscription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.VaultsByHolderAddressResponse}
 */
proto.ninja_api.VaultsByHolderAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.VaultsByHolderAddressResponse;
  return proto.ninja_api.VaultsByHolderAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.VaultsByHolderAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.VaultsByHolderAddressResponse}
 */
proto.ninja_api.VaultsByHolderAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.Subscription;
      reader.readMessage(value,proto.ninja_api.Subscription.deserializeBinaryFromReader);
      msg.addSubscriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.VaultsByHolderAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.VaultsByHolderAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.VaultsByHolderAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.VaultsByHolderAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.Subscription.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Subscription subscriptions = 1;
 * @return {!Array<!proto.ninja_api.Subscription>}
 */
proto.ninja_api.VaultsByHolderAddressResponse.prototype.getSubscriptionsList = function() {
  return /** @type{!Array<!proto.ninja_api.Subscription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.Subscription, 1));
};


/**
 * @param {!Array<!proto.ninja_api.Subscription>} value
 * @return {!proto.ninja_api.VaultsByHolderAddressResponse} returns this
*/
proto.ninja_api.VaultsByHolderAddressResponse.prototype.setSubscriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.Subscription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.Subscription}
 */
proto.ninja_api.VaultsByHolderAddressResponse.prototype.addSubscriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.Subscription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.VaultsByHolderAddressResponse} returns this
 */
proto.ninja_api.VaultsByHolderAddressResponse.prototype.clearSubscriptionsList = function() {
  return this.setSubscriptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.Subscription.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.Subscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.Subscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Subscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultInfo: (f = msg.getVaultInfo()) && proto.ninja_api.Vault.toObject(includeInstance, f),
    lpAmount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    holderAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lpAmountPercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    redemptionLockTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lockedAmount: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.Subscription}
 */
proto.ninja_api.Subscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.Subscription;
  return proto.ninja_api.Subscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.Subscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.Subscription}
 */
proto.ninja_api.Subscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.Vault;
      reader.readMessage(value,proto.ninja_api.Vault.deserializeBinaryFromReader);
      msg.setVaultInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLpAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLpAmountPercentage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRedemptionLockTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockedAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.Subscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.Subscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.Subscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Subscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ninja_api.Vault.serializeBinaryToWriter
    );
  }
  f = message.getLpAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLpAmountPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRedemptionLockTime();
  if (f !== 0) {
    writer.writeSint64(
      5,
      f
    );
  }
  f = message.getLockedAmount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional Vault vault_info = 1;
 * @return {?proto.ninja_api.Vault}
 */
proto.ninja_api.Subscription.prototype.getVaultInfo = function() {
  return /** @type{?proto.ninja_api.Vault} */ (
    jspb.Message.getWrapperField(this, proto.ninja_api.Vault, 1));
};


/**
 * @param {?proto.ninja_api.Vault|undefined} value
 * @return {!proto.ninja_api.Subscription} returns this
*/
proto.ninja_api.Subscription.prototype.setVaultInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.clearVaultInfo = function() {
  return this.setVaultInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.Subscription.prototype.hasVaultInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string lp_amount = 2;
 * @return {string}
 */
proto.ninja_api.Subscription.prototype.getLpAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.setLpAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string holder_address = 3;
 * @return {string}
 */
proto.ninja_api.Subscription.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double lp_amount_percentage = 4;
 * @return {number}
 */
proto.ninja_api.Subscription.prototype.getLpAmountPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.setLpAmountPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional sint64 redemption_lock_time = 5;
 * @return {number}
 */
proto.ninja_api.Subscription.prototype.getRedemptionLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.setRedemptionLockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string locked_amount = 6;
 * @return {string}
 */
proto.ninja_api.Subscription.prototype.getLockedAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Subscription} returns this
 */
proto.ninja_api.Subscription.prototype.setLockedAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LPHoldersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LPHoldersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LPHoldersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPHoldersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    vaultAddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LPHoldersRequest}
 */
proto.ninja_api.LPHoldersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LPHoldersRequest;
  return proto.ninja_api.LPHoldersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LPHoldersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LPHoldersRequest}
 */
proto.ninja_api.LPHoldersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LPHoldersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LPHoldersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LPHoldersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPHoldersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 page_size = 1;
 * @return {number}
 */
proto.ninja_api.LPHoldersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.LPHoldersRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 page_index = 2;
 * @return {number}
 */
proto.ninja_api.LPHoldersRequest.prototype.getPageIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.setPageIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.clearPageIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.LPHoldersRequest.prototype.hasPageIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string vault_address = 3;
 * @return {string}
 */
proto.ninja_api.LPHoldersRequest.prototype.getVaultAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.setVaultAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ninja_api.LPHoldersRequest} returns this
 */
proto.ninja_api.LPHoldersRequest.prototype.clearVaultAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ninja_api.LPHoldersRequest.prototype.hasVaultAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.LPHoldersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LPHoldersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LPHoldersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LPHoldersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPHoldersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    holdersList: jspb.Message.toObjectList(msg.getHoldersList(),
    proto.ninja_api.Holders.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LPHoldersResponse}
 */
proto.ninja_api.LPHoldersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LPHoldersResponse;
  return proto.ninja_api.LPHoldersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LPHoldersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LPHoldersResponse}
 */
proto.ninja_api.LPHoldersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.Holders;
      reader.readMessage(value,proto.ninja_api.Holders.deserializeBinaryFromReader);
      msg.addHolders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LPHoldersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LPHoldersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LPHoldersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LPHoldersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHoldersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.Holders.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Holders holders = 1;
 * @return {!Array<!proto.ninja_api.Holders>}
 */
proto.ninja_api.LPHoldersResponse.prototype.getHoldersList = function() {
  return /** @type{!Array<!proto.ninja_api.Holders>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.Holders, 1));
};


/**
 * @param {!Array<!proto.ninja_api.Holders>} value
 * @return {!proto.ninja_api.LPHoldersResponse} returns this
*/
proto.ninja_api.LPHoldersResponse.prototype.setHoldersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.Holders=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.Holders}
 */
proto.ninja_api.LPHoldersResponse.prototype.addHolders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.Holders, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.LPHoldersResponse} returns this
 */
proto.ninja_api.LPHoldersResponse.prototype.clearHoldersList = function() {
  return this.setHoldersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.Holders.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.Holders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.Holders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Holders.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vaultAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lpAmountPercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    redemptionLockTime: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.Holders}
 */
proto.ninja_api.Holders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.Holders;
  return proto.ninja_api.Holders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.Holders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.Holders}
 */
proto.ninja_api.Holders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaultAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLpAmountPercentage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRedemptionLockTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.Holders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.Holders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.Holders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.Holders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVaultAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeSint64(
      4,
      f
    );
  }
  f = message.getLpAmountPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getRedemptionLockTime();
  if (f !== 0) {
    writer.writeSint64(
      6,
      f
    );
  }
};


/**
 * optional string holder_address = 1;
 * @return {string}
 */
proto.ninja_api.Holders.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vault_address = 2;
 * @return {string}
 */
proto.ninja_api.Holders.prototype.getVaultAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setVaultAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.ninja_api.Holders.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sint64 updated_at = 4;
 * @return {number}
 */
proto.ninja_api.Holders.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double lp_amount_percentage = 5;
 * @return {number}
 */
proto.ninja_api.Holders.prototype.getLpAmountPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setLpAmountPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional sint64 redemption_lock_time = 6;
 * @return {number}
 */
proto.ninja_api.Holders.prototype.getRedemptionLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.Holders} returns this
 */
proto.ninja_api.Holders.prototype.setRedemptionLockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.PortfolioRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.PortfolioRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.PortfolioRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PortfolioRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.PortfolioRequest}
 */
proto.ninja_api.PortfolioRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.PortfolioRequest;
  return proto.ninja_api.PortfolioRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.PortfolioRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.PortfolioRequest}
 */
proto.ninja_api.PortfolioRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.PortfolioRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.PortfolioRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.PortfolioRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PortfolioRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string holder_address = 1;
 * @return {string}
 */
proto.ninja_api.PortfolioRequest.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.PortfolioRequest} returns this
 */
proto.ninja_api.PortfolioRequest.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.PortfolioResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.PortfolioResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.PortfolioResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.PortfolioResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PortfolioResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    totalValueChartList: jspb.Message.toObjectList(msg.getTotalValueChartList(),
    proto.ninja_api.PriceSnapshot.toObject, includeInstance),
    pnlChartList: jspb.Message.toObjectList(msg.getPnlChartList(),
    proto.ninja_api.PriceSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.PortfolioResponse}
 */
proto.ninja_api.PortfolioResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.PortfolioResponse;
  return proto.ninja_api.PortfolioResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.PortfolioResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.PortfolioResponse}
 */
proto.ninja_api.PortfolioResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPnl(value);
      break;
    case 3:
      var value = new proto.ninja_api.PriceSnapshot;
      reader.readMessage(value,proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader);
      msg.addTotalValueChart(value);
      break;
    case 4:
      var value = new proto.ninja_api.PriceSnapshot;
      reader.readMessage(value,proto.ninja_api.PriceSnapshot.deserializeBinaryFromReader);
      msg.addPnlChart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.PortfolioResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.PortfolioResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.PortfolioResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.PortfolioResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotalValueChartList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ninja_api.PriceSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getPnlChartList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ninja_api.PriceSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional double total_value = 1;
 * @return {number}
 */
proto.ninja_api.PortfolioResponse.prototype.getTotalValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.PortfolioResponse} returns this
 */
proto.ninja_api.PortfolioResponse.prototype.setTotalValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double pnl = 2;
 * @return {number}
 */
proto.ninja_api.PortfolioResponse.prototype.getPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.PortfolioResponse} returns this
 */
proto.ninja_api.PortfolioResponse.prototype.setPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated PriceSnapshot total_value_chart = 3;
 * @return {!Array<!proto.ninja_api.PriceSnapshot>}
 */
proto.ninja_api.PortfolioResponse.prototype.getTotalValueChartList = function() {
  return /** @type{!Array<!proto.ninja_api.PriceSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.PriceSnapshot, 3));
};


/**
 * @param {!Array<!proto.ninja_api.PriceSnapshot>} value
 * @return {!proto.ninja_api.PortfolioResponse} returns this
*/
proto.ninja_api.PortfolioResponse.prototype.setTotalValueChartList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ninja_api.PriceSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.PortfolioResponse.prototype.addTotalValueChart = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ninja_api.PriceSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.PortfolioResponse} returns this
 */
proto.ninja_api.PortfolioResponse.prototype.clearTotalValueChartList = function() {
  return this.setTotalValueChartList([]);
};


/**
 * repeated PriceSnapshot pnl_chart = 4;
 * @return {!Array<!proto.ninja_api.PriceSnapshot>}
 */
proto.ninja_api.PortfolioResponse.prototype.getPnlChartList = function() {
  return /** @type{!Array<!proto.ninja_api.PriceSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.PriceSnapshot, 4));
};


/**
 * @param {!Array<!proto.ninja_api.PriceSnapshot>} value
 * @return {!proto.ninja_api.PortfolioResponse} returns this
*/
proto.ninja_api.PortfolioResponse.prototype.setPnlChartList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ninja_api.PriceSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.PriceSnapshot}
 */
proto.ninja_api.PortfolioResponse.prototype.addPnlChart = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ninja_api.PriceSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.PortfolioResponse} returns this
 */
proto.ninja_api.PortfolioResponse.prototype.clearPnlChartList = function() {
  return this.setPnlChartList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LeaderboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LeaderboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LeaderboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LeaderboardRequest}
 */
proto.ninja_api.LeaderboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LeaderboardRequest;
  return proto.ninja_api.LeaderboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LeaderboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LeaderboardRequest}
 */
proto.ninja_api.LeaderboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LeaderboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LeaderboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LeaderboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ninja_api.LeaderboardResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LeaderboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LeaderboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LeaderboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.ninja_api.LeaderboardEntry.toObject, includeInstance),
    snapshotBlock: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LeaderboardResponse}
 */
proto.ninja_api.LeaderboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LeaderboardResponse;
  return proto.ninja_api.LeaderboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LeaderboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LeaderboardResponse}
 */
proto.ninja_api.LeaderboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ninja_api.LeaderboardEntry;
      reader.readMessage(value,proto.ninja_api.LeaderboardEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSnapshotBlock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LeaderboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LeaderboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LeaderboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ninja_api.LeaderboardEntry.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotBlock();
  if (f !== 0) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeSint64(
      3,
      f
    );
  }
};


/**
 * repeated LeaderboardEntry entries = 1;
 * @return {!Array<!proto.ninja_api.LeaderboardEntry>}
 */
proto.ninja_api.LeaderboardResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.ninja_api.LeaderboardEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ninja_api.LeaderboardEntry, 1));
};


/**
 * @param {!Array<!proto.ninja_api.LeaderboardEntry>} value
 * @return {!proto.ninja_api.LeaderboardResponse} returns this
*/
proto.ninja_api.LeaderboardResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ninja_api.LeaderboardEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ninja_api.LeaderboardEntry}
 */
proto.ninja_api.LeaderboardResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ninja_api.LeaderboardEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ninja_api.LeaderboardResponse} returns this
 */
proto.ninja_api.LeaderboardResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};


/**
 * optional sint64 snapshot_block = 2;
 * @return {number}
 */
proto.ninja_api.LeaderboardResponse.prototype.getSnapshotBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LeaderboardResponse} returns this
 */
proto.ninja_api.LeaderboardResponse.prototype.setSnapshotBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint64 updated_at = 3;
 * @return {number}
 */
proto.ninja_api.LeaderboardResponse.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LeaderboardResponse} returns this
 */
proto.ninja_api.LeaderboardResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ninja_api.LeaderboardEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ninja_api.LeaderboardEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ninja_api.LeaderboardEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ninja_api.LeaderboardEntry}
 */
proto.ninja_api.LeaderboardEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ninja_api.LeaderboardEntry;
  return proto.ninja_api.LeaderboardEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ninja_api.LeaderboardEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ninja_api.LeaderboardEntry}
 */
proto.ninja_api.LeaderboardEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPnl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ninja_api.LeaderboardEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ninja_api.LeaderboardEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ninja_api.LeaderboardEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ninja_api.LeaderboardEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.ninja_api.LeaderboardEntry.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ninja_api.LeaderboardEntry} returns this
 */
proto.ninja_api.LeaderboardEntry.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double pnl = 2;
 * @return {number}
 */
proto.ninja_api.LeaderboardEntry.prototype.getPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ninja_api.LeaderboardEntry} returns this
 */
proto.ninja_api.LeaderboardEntry.prototype.setPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.ninja_api);
